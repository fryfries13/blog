<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MyAI模板 - 创建自己的AI，网页部署，更好分享</title>
      <link href="/post/MyAI/"/>
      <url>/post/MyAI/</url>
      
        <content type="html"><![CDATA[<h1 id="MyAI模板-创建自己的AI，网页部署，更好分享"><a href="#MyAI模板-创建自己的AI，网页部署，更好分享" class="headerlink" title="MyAI模板 - 创建自己的AI，网页部署，更好分享"></a>MyAI模板 - 创建自己的AI，网页部署，更好分享</h1><img alt="PixPin_2025-08-22_13-31-51" src="https://github.com/user-attachments/assets/a3750f3e-19d6-4b27-8d02-7c3a62175c4c" /><p><em>欢迎访问<a href="https://cxybbs.top/ai">MyAI示例站点</a></em><br><em>仓库请见<a href="https://github.com/RMDCXY/MyAI">MyAI仓库</a></em></p><blockquote><p>本文档将会一步步引导您创建出自己的MyAI，让大家更好、更容易体验到您的AI！</p></blockquote><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="* 准备工作"></a>* 准备工作</h2><p>您需要准备好一个域名，并将域名托管到Cloudflare上。如果您没有米买域名，可以通过以下两期教程快速获得一个免费域名。您还需要准备好MyAI网页的背景图片，分为电脑端和手机端两张。您还可以准备好一个霍格沃茨环境（可选），用于加速访问Cloudflare。</p><p><a href="https://www.bilibili.com/video/BV13pGJzpEpT/?share_source=copy_web&vd_source=3392b84c6a87a67bdce0fd9ca9fdbf67">dpdns.org免费域名注册+托管教程</a></p><p><a href="https://www.bilibili.com/video/BV1AjiBYVEoF/?share_source=copy_web&vd_source=3392b84c6a87a67bdce0fd9ca9fdbf67">us.kg免费域名注册+托管教程</a></p><h2 id="①第一步-克隆仓库"><a href="#①第一步-克隆仓库" class="headerlink" title="①第一步 克隆仓库"></a>①第一步 克隆仓库</h2><blockquote><p>Tips:MyAI依赖于Cloudflare Pages运行，为了编辑方便，建议使用克隆仓库到本地的方法。</p></blockquote><p>首先，您需要将本仓库克隆到本地。您可以点击仓库的绿色<code>code</code>按钮，再点击<code>Download ZIP</code>按钮将整个仓库以ZIP形式下载到本地。或者，您还可以使用Git克隆、前往本仓库的Releases下载，等等。在将仓库克隆完成之后，您应该会在您的计算机上的MyAI文件夹内看到<code>index.html</code>和<code>script.js</code>两个文件。当您完成这一步之后，就可以进行下一步了。</p><h2 id="②第二步-调整背景"><a href="#②第二步-调整背景" class="headerlink" title="②第二步 调整背景"></a>②第二步 调整背景</h2><blockquote><p>注：在本步骤的重命名图片操作中，扩展名无需更改。</p></blockquote><p>将两张准备工作中准备好的电脑端、手机端背景图片分别重命名为<code>pc.png</code>和<code>mob.png</code>，复制到MyAI文件夹的根目录下。</p><h2 id="③第三步-硅基流动"><a href="#③第三步-硅基流动" class="headerlink" title="③第三步 硅基流动"></a>③第三步 硅基流动</h2><p>打开<a href="https://siliconflow.cn/">硅基流动官网</a>，点击右上角<code>登录</code>，并注册或登录现有账户。</p><p>登录或注册完成之后，应该会自动跳转到模型广场页面。如果没有，请<a href="https://cloud.siliconflow.cn/me/models">点我</a>打开模型广场。</p><p>打开模型广场，点击左侧的<strong>API密钥</strong>，再点击页面上方的<code>🔑新建API密钥</code>，为新的密钥取一个名字，点击确定，API密钥就创建成功了。</p><h2 id="④第四步-修改JS"><a href="#④第四步-修改JS" class="headerlink" title="④第四步 修改JS"></a>④第四步 修改JS</h2><p>转到第<code>16</code>行，将双引号内的内容换成您希望的AI提示词。</p><blockquote><p>Tips:如果您不会写提示词，您可以参考以下提示词，或者复制以下提示词替换。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你的名字叫做“(替换为您的AI名字)”，是一个AI助理。你和用户交流需要和聊天一样，回答要简洁明了，态度要积极乐观。你的回答绝对不能使用任何Markdown格式，回答的字数尽量控制在50字以内，在非用户要求情况的下输出只能使用中文。注意，你不是多模态模型，不能生成图片、视频等，当用户和您提出这类要求时，你需要拒绝用户。现在，你需要严格按照以上要求来处理用户的问题：</span><br></pre></td></tr></table></figure><h2 id="⑤第五步-修改页面"><a href="#⑤第五步-修改页面" class="headerlink" title="⑤第五步 修改页面"></a>⑤第五步 修改页面</h2><p>打开MyAI文件夹，使用您喜欢的文本编辑器打开文件夹下的<code>myai.json</code>，转到第<code>2</code>行，修改其中的<code>MyAI模板</code>字段为您想要的页面大标题。再转到第<code>5</code>行，将其中的<code>欢迎使用MyAI模板！(≧∇≦)ﾉ</code>字段更换为您想要的AI欢迎语（打开网页时AI方自动发送的文本）。再转到第<code>6</code>行，修改其中的<code>MyAI</code>字段为您想要的页面标题。</p><h2 id="⑥第六步-创建代理"><a href="#⑥第六步-创建代理" class="headerlink" title="⑥第六步 创建代理"></a>⑥第六步 创建代理</h2><blockquote><p>为了您的API密钥的安全，我们需要通过Cloudflare Worker创建一个AI代理转发流量到硅基流动。</p></blockquote><p>打开<a href="https://dash.cloudflare.com/">Cloudflare</a>，登录或注册现有账户。然后在左侧边栏中找到<strong>计算 (Workers)</strong>，点击进入，然后点击蓝色的<code>创建</code>按钮，点击最下面的<strong>从 Hello,World! 开始</strong>旁边的<code>开始使用</code>按钮，在<strong>Worker 名称</strong>输入框内为Worker取一个合适的名字（例如<code>ai-proxy-service</code>），点击<code>部署</code>，Worker就创建完成了。完成之后，点击右上角的<code>编辑代码</code>按钮，会打开Worker代码的编辑器，在左侧的编辑器中，粘贴以下代码，并点击右上角<code>部署</code>按钮。创建AI代理Worker的工作，就完成了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">fetch</span>(<span class="params">request, env</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 只处理 /ai-proxy 路径的请求</span></span><br><span class="line">    <span class="keyword">if</span> (!url.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;/ai-proxy&#x27;</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">&#x27;Not Found&#x27;</span>, &#123; <span class="attr">status</span>: <span class="number">404</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理 OPTIONS 预检请求</span></span><br><span class="line">    <span class="keyword">if</span> (request.<span class="property">method</span> === <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>: <span class="string">&#x27;POST, OPTIONS&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>: <span class="string">&#x27;Content-Type&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Access-Control-Max-Age&#x27;</span>: <span class="string">&#x27;86400&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只允许 POST 请求</span></span><br><span class="line">    <span class="keyword">if</span> (request.<span class="property">method</span> !== <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; </span><br><span class="line">        <span class="attr">error</span>: <span class="string">&#x27;Method not allowed&#x27;</span>,</span><br><span class="line">        <span class="attr">allowed_methods</span>: [<span class="string">&#x27;POST&#x27;</span>]</span><br><span class="line">      &#125;), &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">405</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 解析请求数据</span></span><br><span class="line">      <span class="keyword">const</span> requestData = <span class="keyword">await</span> request.<span class="title function_">json</span>();</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 调试日志 - 记录请求数据</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;请求数据:&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(requestData, <span class="literal">null</span>, <span class="number">2</span>));</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 调用硅基流动 API</span></span><br><span class="line">      <span class="keyword">const</span> apiResponse = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;https://api.siliconflow.cn/v1/chat/completions&quot;</span>, &#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Authorization&quot;</span>: <span class="string">`Bearer <span class="subst">$&#123;env.SILICONFLOW_API_KEY&#125;</span>`</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(requestData)</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 调试日志 - 记录 API 状态</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`API 状态: <span class="subst">$&#123;apiResponse.status&#125;</span>`</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 获取响应文本（避免直接解析 JSON）</span></span><br><span class="line">      <span class="keyword">const</span> responseText = <span class="keyword">await</span> apiResponse.<span class="title function_">text</span>();</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 调试日志 - 记录响应文本</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;API 响应:&quot;</span>, responseText.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">300</span>)); <span class="comment">// 只记录前300字符</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 如果 API 返回错误，直接转发</span></span><br><span class="line">      <span class="keyword">if</span> (!apiResponse.<span class="property">ok</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(responseText, &#123;</span><br><span class="line">          <span class="attr">status</span>: apiResponse.<span class="property">status</span>,</span><br><span class="line">          <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: apiResponse.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Content-Type&quot;</span>) || <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 尝试解析为 JSON</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> jsonData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(responseText);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(jsonData), &#123;</span><br><span class="line">          <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">          <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="comment">// 如果解析失败，返回原始文本</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(responseText, &#123;</span><br><span class="line">          <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">          <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="comment">// 详细的错误响应</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">        <span class="attr">error</span>: <span class="string">&quot;代理服务器错误&quot;</span>,</span><br><span class="line">        <span class="attr">message</span>: error.<span class="property">message</span>,</span><br><span class="line">        <span class="attr">stack</span>: error.<span class="property">stack</span></span><br><span class="line">      &#125;), &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="⑦第七步-正式部署"><a href="#⑦第七步-正式部署" class="headerlink" title="⑦第七步 正式部署"></a>⑦第七步 正式部署</h2><p>打开<a href="https://dash.cloudflare.com/">Cloudflare</a>，登录或注册现有账户。然后在左侧边栏中找到<strong>计算 (Workers)</strong>，点击进入，然后点击蓝色的<code>创建</code>按钮，在<strong>开始使用</strong>下方，选择<strong>Pages</strong>，点击<strong>使用直接上传</strong>旁边的<code>开始使用</code>。在<strong>项目名称</strong>的输入框中，填写一个适合的名称（例如<code>my-ai</code>），点击<code>创建项目</code>，选择<code>📂上传文件夹</code>，再将整个MyAI文件夹上传上去，就部署完成啦！<br>部署完成之后，您还需要前往Pages的<strong>自定义域</strong>部分，添加一个自定义域（您托管在Cloudflare上的域名），注意，这一步是必须的！</p><p>在部署完成之后，我们还需要进行一下最后的配置。依旧打开<a href="https://dash.cloudflare.com/">Cloudflare</a>，然后在左侧边栏中找到<strong>计算 (Workers)</strong>，点击进入，打开<strong>第六步</strong>创建的Worker，进入<strong>设置</strong>，点击下方<strong>变量与机密</strong>旁边的<code>＋ 添加</code>按钮，会弹出添加页面，在类型处选择<strong>密钥</strong>，变量名称填写<code>SILICONFLOW_API_KEY</code>，值处需要前往<a href="https://cloud.siliconflow.cn/me/account/ak">硅基流动API密钥页面</a>，复制第三步创建的API密钥填入，最后点击部署，API密钥的配置就完成了。<br>API密钥配置完成之后，我们还需要配置Worker路由。依旧打开Worker的设置，点击<strong>域和路由</strong>旁边的<code>＋ 添加</code>按钮，选择<strong>路由</strong>，在<strong>区域</strong>部分选择您托管在Cloudflare上的域名，路由按以下模板填写，再点击<code>添加路由</code>，就可以啦！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（将example.com换成您的域名）</span><br><span class="line">https://*.example.com/ai-proxy*</span><br><span class="line">https://example.com/ai-proxy*</span><br></pre></td></tr></table></figure><h2 id="√-完成！"><a href="#√-完成！" class="headerlink" title="√ 完成！"></a>√ 完成！</h2><p>✨当您看到这一步之后，您的MyAI就已经部署完成啦！</p><p>🤔如果您有一些疑问，可以查看以下的常见的问题解答：</p><p><strong>Q:</strong> 在我的MyAI中与AI对话是完全免费的吗？</p><blockquote><p><strong>A:</strong> 是的。MyAI模板默认配置的AI模型都是免费的。如果您觉得默认配置的AI能力不好，可以参考以下第3个拓展操作更换AI模型。</p></blockquote><p><strong>Q:</strong> 别人可以随意使用我的MyAI进行对话吗？</p><blockquote><p><strong>A:</strong> 是的。只要别人知道您部署后的MyAI的网页URL，无需进行登录等操作即可直接和AI对话。</p></blockquote><p>如果您还有其它问题，可以向本仓库创建一个issue，也可以<a href="mailto:&#x72;&#109;&#x64;&#99;&#120;&#121;&#x70;&#x67;&#x6d;&#64;&#111;&#x75;&#x74;&#108;&#111;&#x6f;&#x6b;&#x2e;&#99;&#111;&#x6d;">向我发邮件</a>询问。</p><h2 id="可选-拓展操作"><a href="#可选-拓展操作" class="headerlink" title="* 可选 拓展操作"></a>* 可选 拓展操作</h2><h3 id="1-自定义错误信息"><a href="#1-自定义错误信息" class="headerlink" title="1.自定义错误信息"></a>1.自定义错误信息</h3><p>打开MyAI文件夹，使用您喜欢的文本编辑器打开文件夹下的<code>script.js</code>，分别修改第<code>129</code>、<code>132</code>、<code>134</code>行的引号中的内容。<strong>（注：要记得检查前面单引号有没有遗漏哦！）</strong></p><h3 id="2-自定义输入框提示文本"><a href="#2-自定义输入框提示文本" class="headerlink" title="2.自定义输入框提示文本"></a>2.自定义输入框提示文本</h3><p>打开MyAI文件夹，使用您喜欢的文本编辑器打开文件夹下的<code>index.html</code>，转到第<code>248</code>行，将<code>输入您的消息...</code>字段更改为您想要的提示文本。<strong>（注：要记得检查英文双引号有没有漏掉哦！）</strong></p><h3 id="3-自定义AI模型"><a href="#3-自定义AI模型" class="headerlink" title="3.自定义AI模型"></a>3.自定义AI模型</h3><h4 id="1-替换默认模型"><a href="#1-替换默认模型" class="headerlink" title="1.替换默认模型"></a>1.替换默认模型</h4><p>打开<a href="https://cloud.siliconflow.cn/me/models">硅基流动模型广场</a>。在这里，找到您想要替换的默认模型。找到以后，点击您想要替换的AI模型，再点击模型名称右侧的复制按钮将模型名称复制下来。接着，打开MyAI文件夹下的<code>script.js</code>，转到第<code>11</code>行，将引号中的字段替换为刚才复制的AI模型。<strong>（注：要记得检查英文单引号有没有漏掉哦！）</strong></p><h4 id="2-替换备用模型"><a href="#2-替换备用模型" class="headerlink" title="2.替换备用模型"></a>2.替换备用模型</h4><p>打开<a href="https://cloud.siliconflow.cn/me/models">硅基流动模型广场</a>。在这里，找到您想要替换的备用模型。找到以后，点击您想要替换的AI模型，再点击模型名称右侧的复制按钮将模型名称复制下来。接着，打开MyAI文件夹下的<code>script.js</code>，转到第<code>12</code>行，将引号中的字段替换为刚才复制的AI模型。<strong>（注：要记得检查英文单引号有没有漏掉哦！）</strong><br>在修改完<code>script.js</code>后，再打开MyAI文件夹下的<code>index.html</code>，转到第<code>258</code>行，替换其中<code>Deepseek-R1深度思考</code>字段为您替换的备用模型名称（可自定义）。</p><blockquote><p>⚠注意！部分模型可能需要💴，您可以打开筛选器，筛选免费的AI模型。当然，如果您有一些💴的话，您也可以在左边侧边栏打开<strong>余额充值</strong>进行充值。</p></blockquote><h3 id="3-自定义页面字体"><a href="#3-自定义页面字体" class="headerlink" title="3.自定义页面字体"></a>3.自定义页面字体</h3><p>首先获取到您想要更改的字体的字体文件（以woff2类型字体为首选，woff和ttf、otf其次），将字体文件复制到MyAI文件夹根目录下，并复制字体文件的名称（包括拓展名）。然后打开<code>index.html</code>，将第<code>23</code>行的<code>font_file</code>字段换成刚才复制到字体文件名。接着，您需要根据您的字体文件类型修改<code>23</code>行的<code>woff2</code>字段为：</p><table><thead><tr><th>字体类型</th><th>操作</th></tr></thead><tbody><tr><td>woff2</td><td>无需更改</td></tr><tr><td>woff</td><td>修改为<code>woff</code></td></tr><tr><td>ttf</td><td>修改为<code>truetype</code></td></tr><tr><td>otf</td><td>修改为<code>opentype</code></td></tr></tbody></table><h3 id="5-自定义网站图标"><a href="#5-自定义网站图标" class="headerlink" title="5.自定义网站图标"></a>5.自定义网站图标</h3><p>准备好您想要更改的图标图片。打开<a href="https://realfavicongenerator.net/">RealFaviconGenerator</a>（此站点为英文站点，如果看不懂可以打开翻译工具），点击右侧的<strong>选择您的网站图标图像</strong>，上传刚才准备的图标图片，并根据需要调整相关配置。注意，在最下面的一个输入框需要填写<code>/favicon/</code>。完成配置之后点击<strong>下一步</strong>,会跳转到新页面，先将页面下方的多行代码复制下来，然后点击<strong>下载</strong>按钮，会下载一个zip压缩包。然后在MyAI文件夹下创建一个<code>favicon</code>文件夹，将下载下来的压缩包解压到MyAI文件夹下的<code>favicon</code>文件夹下。接着打开MyAI文件夹下的<code>index.html</code>，转到第<code>10</code>行，将刚才复制的代码复制到第<code>10</code>行（记得给代码添加缩进！）。这样，图标就修改好了。</p>]]></content>
      
      
      <categories>
          
          <category> 开源项目 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BypassNRO被移除？今天教你Windows11最新预览版跳过联网</title>
      <link href="/post/EP07/"/>
      <url>/post/EP07/</url>
      
        <content type="html"><![CDATA[<div class="video-container"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=114433145702739&bvid=BV121GzzMEJz&cid=30112088389&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h1 id="Windows-11-最新预览版跳过联网"><a href="#Windows-11-最新预览版跳过联网" class="headerlink" title="Windows 11 最新预览版跳过联网"></a>Windows 11 最新预览版跳过联网</h1><h2 id="一、编辑注册表"><a href="#一、编辑注册表" class="headerlink" title="一、编辑注册表"></a>一、编辑注册表</h2><p>在注册表编辑器中，找到以下路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE</span><br></pre></td></tr></table></figure><p>创建或修改名为<code>BypassNRO</code>的注册表项，将其值设置为<code>1</code></p><h2 id="二、直接创建本地账户"><a href="#二、直接创建本地账户" class="headerlink" title="二、直接创建本地账户"></a>二、直接创建本地账户</h2><p>在命令提示符中输入以下命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> ms-cxh:localonly</span><br></pre></td></tr></table></figure><h2 id="三、脚本文件"><a href="#三、脚本文件" class="headerlink" title="三、脚本文件"></a>三、脚本文件</h2><p>将以下内容保存为<code>.bat</code>文件：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE /v BypassNRO /t REG_DWORD /d <span class="number">1</span> /f</span><br><span class="line">shutdown /r /t <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> B站专栏 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 跳过联网 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
